#!/usr/bin/env php
<?php

function fatalHandler() {
    if (($error = error_get_last()) && $error['type'] === E_ERROR) {
        echo "PHP Fatal Error.\n";
        echo "Details: " . print_r($error, true);
        echo "Stack trace: " . print_r(debug_backtrace(), true);
    }
}
register_shutdown_function('fatalHandler');

/*
 * This file is part of the Behat.
 * (c) Konstantin Kudryashov <ever.zet@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

define('BEHAT_BIN_PATH', __FILE__);

/**
 * Includes the specified file if it exists.
 *
 * @param  string $file the file to include.
 * @return mixed  the value that the file returns.
 */
function includeIfExists($file)
{
    /** @noinspection PhpIncludeInspection no way to inspect a dynamic include */
    return file_exists($file) ? include $file : false;
}

if (!$loader = includeIfExists(__DIR__.'/../vendor/autoload.php')) {
    fwrite(STDERR,
        'You must set up the project dependencies, run the following commands:'.PHP_EOL.
        'curl -s http://getcomposer.org/installer | php'.PHP_EOL.
        'php composer.phar install'.PHP_EOL
    );
    exit(1);
}

$factory = new \Behat\Behat\ApplicationFactory();
$factory->createApplication()->run();
