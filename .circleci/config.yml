version: 2.1

commands:
  pull-merge:
    description: "Bring the repository up-to-date with master and handle setup"
    steps:
      - checkout
      - restore_cache:
          key: composer-{{ checksum "composer.lock" }}
      - run:
          name: Configure the CircleCI git user
          command: |
            git config --global user.email "ci@medology.com"
            git config --global user.name "Circle CI"
      - run:
          name: Configure git to use SSH instead of HTTP
          command: |
            git config --global url.git@github.com:.insteadOf git://github.com/
            git config --global --add url.git@github.com:.insteadOf https://github.com/
      - run:
          name: Merge master
          command: git fetch origin && git merge origin/1.0 --no-edit

  build:
    description: "Build the project."
    steps:
      - pull-merge
      - run:
          name: Initialize docker .env
          command: bin/init/init_docker_env.sh
      - run:
          name: Start containers
          command: |
            .circleci/containers up -d
            bin/init/wait_for_services.sh
      - run:
          name: Initialize the project
          command: |
            mkdir -p /tmp/artifacts
            bin/init_project
      - store_test_results:
          path: /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts
      - persist_to_workspace:
          root: .
          paths:
            - .
      - save_cache:
          key: composer-{{ checksum "composer.lock" }}
          paths:
            - ~/.composer/cache

  test:
    description: "Test the project."
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Start containers
          command: |
            .circleci/containers up -d
            bin/init/wait_for_services.sh
      - run:
          name: Unit tests
          command: phpunit --log-junit /tmp/artifacts/phpunit.junit.xml --report-useless-tests --strict-coverage
      - run:
          name: Behat tests
          command: behat --strict -vv -f pretty -o std -f junit -o /tmp/artifacts
      - store_test_results:
          path: /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts

jobs:
  build:
    working_directory: /tmp/FlexibleMink
    parallelism: 1
    machine:
      enabled: true
    environment:
      - PATH: /opt/circleci/.pyenv/shims:./bin:./node_modules/.bin:./vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    steps:
      - build

  test:
    working_directory: /tmp/FlexibleMink
    parallelism: 1
    machine:
      enabled: true
    environment:
      - PATH: /opt/circleci/.pyenv/shims:./bin:./node_modules/.bin:./vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    steps:
      - test

  build-php5:
    working_directory: /tmp/FlexibleMink
    parallelism: 1
    machine:
      enabled: true
    environment:
    - USE_PHP5: 1
    - PATH: /opt/circleci/.pyenv/shims:./bin:./node_modules/.bin:./vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    steps:
    - build

  test-php5:
    working_directory: /tmp/FlexibleMink
    parallelism: 1
    machine:
      enabled: true
    environment:
    - USE_PHP5: 1
    - PATH: /opt/circleci/.pyenv/shims:./bin:./node_modules/.bin:./vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    steps:
    - test

workflows:
  version: 2
  build-and-test:
    jobs:
    - build
    - test:
        requires:
        - build
    - build-php5
    - test-php5:
        requires:
        - build-php5
